// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite" // env("DATABASE_PROVIDER")
  url      = env("DATABASE_URL")
}

model Device {
  id          String        @id @default(cuid())
  name        String
  location    String?
  status      String        @default("INACTIVE")
  drawerCount Int           @default(4)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  secret      String        @default(cuid())
  deviceStatus DeviceStatus?
  commands    Command[]
}

model DeviceStatus {
  id          String   @id @default(cuid())
  deviceId    String   @unique
  lastPoll    DateTime
  lastCommand DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  device   Device   @relation(fields: [deviceId], references: [id], onDelete: Cascade)
}

model Command {
  id          String    @id @default(cuid())
  deviceId    String
  code        String    @unique @default(cuid())
  action      String
  drawer      Int?
  status      String    @default("PENDING")
  createdAt   DateTime  @default(now())
  executedAt  DateTime?
  failedAt    DateTime?
  errorMessage String?

  device      Device    @relation(fields: [deviceId], references: [id], onDelete: Cascade)

  @@index([deviceId, status])
  @@index([code])
}
